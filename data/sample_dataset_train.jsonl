{"prompt": "What is 42 + 31?", "responses": ["73", "The sum of 42 and 31 is 73.", "The answer is 73.", "11", "1302", "74", "65", "I don't know the answer to this question."], "answer_key": 73, "metadata": {"task_type": "math", "correct_indices": [0, 1, 2], "params": {"a": 42, "b": 31}}}
{"prompt": "Create a Python function to count the occurrences of each element in a list. Provide code only.", "responses": ["def count_occurrences(lst):\n    return {item: lst.count(item) for item in set(lst)}\n\n# Example usage:\n# count_occurrences([1, 2, 3, 1, 2, 1]) would return {1: 3, 2: 2, 3: 1}", "I'm not familiar with Python programming.", "def invalid_function():\n    # This function doesn't work\n    pass", "print(\"This is not a function implementation\")\n\n# This doesn't solve the task", "The answer to this would be too complex to implement here.", "Here's a JavaScript solution instead:\n\nfunction solution() {\n    // JavaScript code\n    return null;\n}"], "answer_key": "def count_occurrences(lst):\n    return {item: lst.count(item) for item in set(lst)}", "metadata": {"task_type": "code", "correct_indices": [0], "params": {"task": "count the occurrences of each element in a list"}}}
{"prompt": "What is the sentiment of this text: 'I would highly recommend this to everyone!'", "responses": ["The sentiment of the text is positive.", "This text expresses a positive sentiment.", "The sentiment of the text is negative.", "I cannot determine the sentiment from this text.", "The text doesn't have a clear sentiment.", "The sentiment is mixed."], "answer_key": "positive", "metadata": {"task_type": "classification", "correct_indices": [0, 1], "params": {"text": "I would highly recommend this to everyone!"}}}
{"prompt": "What is the sentiment of this text: 'This exceeded all my expectations!'", "responses": ["The sentiment of the text is positive.", "This text expresses a positive sentiment.", "The sentiment of the text is negative.", "I cannot determine the sentiment from this text.", "The text doesn't have a clear sentiment.", "The sentiment is mixed."], "answer_key": "positive", "metadata": {"task_type": "classification", "correct_indices": [0, 1], "params": {"text": "This exceeded all my expectations!"}}}
{"prompt": "If Charlie is grandparent of Jack, and Jack is grandparent of Nathan, what is Charlie to Nathan?", "responses": ["Charlie is the grandparent of Jack, and Jack is the grandparent of Nathan. If each grandparent relationship is the same, then Charlie would be the great-grandparent of Nathan.", "Charlie is the parent of Nathan.", "Charlie is the child of Nathan.", "Charlie is the grandparent of Nathan.", "They are not related.", "I need more information to determine the relationship."], "answer_key": "great-grandparent", "metadata": {"task_type": "reasoning", "correct_indices": [0], "params": {"person1": "Charlie", "person2": "Jack", "person3": "Nathan", "relation": "grandparent"}}}
{"prompt": "Is the following statement positive, negative, or neutral? 'Terrible customer service and product quality.'", "responses": ["The sentiment of the text is negative.", "This text expresses a negative sentiment.", "The sentiment of the text is positive.", "I cannot determine the sentiment from this text.", "The text doesn't have a clear sentiment.", "The sentiment is mixed."], "answer_key": "negative", "metadata": {"task_type": "classification", "correct_indices": [0, 1], "params": {"text": "Terrible customer service and product quality."}}}
{"prompt": "What is the result of adding 85 to 74?", "responses": ["159", "The sum of 85 and 74 is 159.", "The answer is 159.", "11", "6290", "167", "158", "I don't know the answer to this question."], "answer_key": 159, "metadata": {"task_type": "math", "correct_indices": [0, 1, 2], "params": {"a": 85, "b": 74}}}
{"prompt": "Write a function in Python to calculate the factorial of a number.", "responses": ["def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n# Example usage:\n# factorial(5) would return 120", "I'm not familiar with Python programming.", "def invalid_function():\n    # This function doesn't work\n    pass", "print(\"This is not a function implementation\")\n\n# This doesn't solve the task", "The answer to this would be too complex to implement here.", "Here's a JavaScript solution instead:\n\nfunction solution() {\n    // JavaScript code\n    return null;\n}"], "answer_key": "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)", "metadata": {"task_type": "code", "correct_indices": [0], "params": {"task": "calculate the factorial of a number"}}}
